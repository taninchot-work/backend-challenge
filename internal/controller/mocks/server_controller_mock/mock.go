// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery
// template: testify

package mock_server_controller

import (
	"net/http"

	mock "github.com/stretchr/testify/mock"
)

// NewServerController creates a new instance of ServerController. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewServerController(t interface {
	mock.TestingT
	Cleanup(func())
}) *ServerController {
	mock := &ServerController{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// ServerController is an autogenerated mock type for the ServerController type
type ServerController struct {
	mock.Mock
}

type ServerController_Expecter struct {
	mock *mock.Mock
}

func (_m *ServerController) EXPECT() *ServerController_Expecter {
	return &ServerController_Expecter{mock: &_m.Mock}
}

// HealthCheck provides a mock function for the type ServerController
func (_mock *ServerController) HealthCheck(w http.ResponseWriter, r *http.Request) {
	_mock.Called(w, r)
	return
}

// ServerController_HealthCheck_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'HealthCheck'
type ServerController_HealthCheck_Call struct {
	*mock.Call
}

// HealthCheck is a helper method to define mock.On call
//   - w
//   - r
func (_e *ServerController_Expecter) HealthCheck(w interface{}, r interface{}) *ServerController_HealthCheck_Call {
	return &ServerController_HealthCheck_Call{Call: _e.mock.On("HealthCheck", w, r)}
}

func (_c *ServerController_HealthCheck_Call) Run(run func(w http.ResponseWriter, r *http.Request)) *ServerController_HealthCheck_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request))
	})
	return _c
}

func (_c *ServerController_HealthCheck_Call) Return() *ServerController_HealthCheck_Call {
	_c.Call.Return()
	return _c
}

func (_c *ServerController_HealthCheck_Call) RunAndReturn(run func(w http.ResponseWriter, r *http.Request)) *ServerController_HealthCheck_Call {
	_c.Run(run)
	return _c
}
